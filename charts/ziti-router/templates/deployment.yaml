{{- $root := . }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ziti-router.fullname" . }}
  labels:
    {{- include "ziti-router.labels" . | nindent 4 }}
    app.kubernetes.io/component: "ziti-router"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "ziti-router.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: "ziti-router"
  template:
    metadata:
      annotations:
        configmap-checksum: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "ziti-router.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: "ziti-router"
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      hostNetwork: {{ .Values.hostNetwork }}
      dnsPolicy: {{ .Values.dnsPolicy }}
      dnsConfig: 
        {{- toYaml .Values.dnsConfig | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            {{- toYaml .Values.ports | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{ if .Values.image.command }}
          command:
          {{- range .Values.image.command }}
            - {{ . | quote }}
          {{- end }}
          {{ end }}
          args:
            {{- tpl (toYaml .Values.image.args) . | nindent 12 }}
            {{- range .Values.image.additionalArgs }}
            - {{ . | quote }}
            {{- end }}
          env:
            - name: ZITI_ENROLL_TOKEN
              {{- if .Values.enrollmentJwtFromSecret }}
              valueFrom:
                secretKeyRef:
                  name: {{ required (printf "You must set an enrollmentJwtSecretName, when using enrollmentJwtFromSecret. Try setting --set enrollmentJwtSecretName=myEnrollmentJwtSecret") .Values.enrollmentJwtSecretName }}
                  key: enrollmentJwt
              {{- else }}
              value: {{ .Values.enrollmentJwt | quote }}
              {{- end }}
            # must be true or enroll() will not be called
            - name: ZITI_BOOTSTRAP
              value: "true"
            # -- enroll with controller if "true," overwrite if "force"; requires ZITI_BOOTSTRAP=true
            - name: ZITI_BOOTSTRAP_ENROLLMENT
              value: "true"
            # suppress generating a config.yml because in K8s we mount a configMap rendered by Helm
            - name: ZITI_BOOTSTRAP_CONFIG
              value: "false"
            # entrypoint will append --extend to run command if "true"
            - name: ZITI_AUTO_RENEW_CERTS
              value: "true"
            # used by entrypoint's enroll() function to predict the path to the enrolled identity's cert
            - name: ZITI_HOME
              value: {{ .Values.configMountDir | quote }}
            - name: ZITI_ROUTER_NAME
              value: {{ include "ziti-router.fullname" . | quote }}
            {{- range $key, $val := .Values.env }}
            - name: {{ $key | quote }}
              value: {{ $val | quote }}
            {{- end }}
          volumeMounts:
            - mountPath: {{ .Values.configMountDir }}
              name: config-data
              readOnly: false
            - mountPath: {{ .Values.configMountDir }}/{{ .Values.configFile }}
              name: ziti-router-config
              subPath: {{ .Values.configFile }}  # project the read-only config into the writeable volume to allow router to write ./endpoints.yml state file in same dir as config
            {{- range .Values.additionalVolumes }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
            {{- end }}
            {{- if gt (len .Values.identity.altServerCerts) 0 }}
              {{- range .Values.identity.altServerCerts }}
                {{- if eq .mode "certManager" }}
            - name: {{ printf "%v-%v" (include "ziti-router.fullname" $root) .secretName }}
              mountPath: {{ .mountPath }}
                {{- end }}
              {{- end }}
            {{- end }}
          # deployment condition ready and receive traffic when this passes
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - ziti agent stats
            initialDelaySeconds: 10
            periodSeconds: 10
          # delete pod if this fails
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - ziti agent stats
            initialDelaySeconds: 10
            periodSeconds: 10
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: ziti-router-config
          configMap:
            name: {{ include "ziti-router.fullname" . }}-config
            defaultMode: 0444
        - name: config-data
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "ziti-router.fullname" .) }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        {{- range .Values.additionalVolumes }}
        - name: {{ .name }}
          {{- if eq .volumeType "secret" }}
          secret:
            secretName: {{ .secretName }}
          {{- else if eq .volumeType "configMap" }}
          configMap:
            name: {{ .configMapName }}
            defaultMode: {{ .defaultMode | default 0644}}
          {{- else if eq .volumeType "csi" }}
          csi:
            driver: {{ .driverName }}
            volumeAttributes:
              {{- toYaml .attributes | nindent 14 }}
          {{- else if eq .volumeType "hostPath" }}
          hostPath:
            path: {{ .mountPath }}
            type: {{ .behavior }}
          {{- else if eq .volumeType "emptyDir" }}
          emptyDir: {}
          {{- end }}
        {{- end }}
        {{- if gt (len .Values.identity.altServerCerts) 0 }}
          {{- range .Values.identity.altServerCerts }}
            {{- if eq .mode "certManager" }}
        - name: {{ printf "%v-%v" (include "ziti-router.fullname" $root) .secretName }}
          secret:
            secretName: {{ .secretName }}
            {{- end }}
          {{- end }}
        {{- end }}
