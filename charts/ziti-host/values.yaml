# Default values for ziti-host.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
image:
  repository: openziti/ziti-host
#  pullPolicy: Never
  pullPolicy: Always
#  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
#  tag: helmtest
#   command: ["sh", "-c", "while true; do sleep 11; done"]
  args: []  # the ziti-host image execs "ziti-edge-tunnel run-host" to only host, not intercept/proxy, no DNS

dnsPolicy: ClusterFirstWithHostNet

secret: {}
  # Use an existing secret name
  # existingSecretName: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  # -- int: UID to run the container as (default: nobody)
  runAsUser: 65534
  # -- int: GID to run the container as (default: nogroup)
  runAsGroup: 65534
  # -- int: fsGroup for podSecurityContext (default: nogroup)
  fsGroup: 65534

# -- bool: host network mode
hostNetwork: False

securityContext: {}
  # capabilities:
  #   add:
  #     - NET_ADMIN

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

ports: []

nodeSelector: {}
#  kubernetes.io/role: master

tolerations: []
  # - key: node-role.kubernetes.io/master
  #   operator: Exists
  #   effect: NoSchedule

affinity: {}

replicas: 1

spireAgent:
  # -- if you are running a container with the spire-agent binary installed
  # then this will allow you to add the hostpath necessary for connecting to
  # the spire socket
  enabled: false
  # -- file path of the spire socket mount
  spireSocketMnt: /run/spire/sockets

# -- additional volumes to mount to ziti-host container
additionalVolumes: []
#  - name: additional-volume-1
#    volumeType: secret
#    mountPath: /path/to/mount/1
#    secretName: name-of-secret
#  - name: additional-volume-2
#    volumeType: configMap
#    mountPath: /path/to/configmap/mount
#    configMapName: your-configmap-name
#  - name: additional-volume-2
#    volumeType: emptyDir
#    mountPath: /path/to/mount/2
