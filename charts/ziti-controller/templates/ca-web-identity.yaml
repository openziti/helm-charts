#######
# CA that issues the server certificate for web bindings like the edge client API,
# edge management API
######
{{- if (eq .Values.webBindingPki.enabled true) }}

# generate a root CA if no alternative issuer is configured for the controller's
# web binding PKI
{{- if eq (len .Values.webBindingPki.alternativeIssuer) 0 }}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ include "ziti-controller.fullname" . }}-web-root-cert
  labels:
    {{- include "ziti-controller.labels" . | nindent 4 }}
spec:
  commonName: {{ include "ziti-controller.fullname" . }}-web-root
  secretName: {{ include "ziti-controller.fullname" . }}-web-root-secret
  isCA: true
  duration: {{ .Values.ca.duration }}
  renewBefore: {{ .Values.ca.renewBefore }}
  usages:
    - digital signature
    - cert sign
    - crl sign
  privateKey:
    algorithm: ECDSA
    size: 256
  issuerRef:
    kind: Issuer
    name: {{ include "ziti-controller.fullname" . }}-selfsigned-ca-issuer

---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: {{ include "ziti-controller.fullname" . }}-web-root-issuer
  labels:
    {{- include "ziti-controller.labels" . | nindent 4 }}
spec:
  ca:
    secretName: {{ include "ziti-controller.fullname" . }}-web-root-secret
{{- end }}

---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ include "ziti-controller.fullname" . }}-web-intermediate-cert
  labels:
    {{- include "ziti-controller.labels" . | nindent 4 }}
spec:
  commonName: {{ include "ziti-controller.fullname" . }}-web-intermediate
  secretName: {{ include "ziti-controller.fullname" . }}-web-intermediate-secret
  isCA: true
  duration: {{ .Values.ca.duration }}
  renewBefore: {{ .Values.ca.renewBefore }}
  usages:
    - digital signature
    - cert sign
    - crl sign
  privateKey:
    algorithm: ECDSA
    size: 256
  issuerRef:
    {{- if .Values.webBindingPki.alternativeIssuer }}
      {{- with .Values.webBindingPki.alternativeIssuer }}
        {{- toYaml . | nindent 4 }}
      {{- end }}
    {{- else }}
    kind: Issuer
    name: {{ include "ziti-controller.fullname" . }}-web-root-issuer
    {{- end }}

---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: {{ include "ziti-controller.fullname" . }}-web-intermediate-issuer
  labels:
    {{- include "ziti-controller.labels" . | nindent 4 }}
spec:
  ca:
    secretName: {{ include "ziti-controller.fullname" . }}-web-intermediate-secret

---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ include "ziti-controller.fullname" . }}-web-identity-cert
  labels:
    {{- include "ziti-controller.labels" . | nindent 4 }}
spec:
  commonName: {{ include "ziti-controller.fullname" . }}-web-identity
  secretName: {{ include "ziti-controller.fullname" . }}-web-identity-secret
  isCA: false
  duration: {{ .Values.cert.duration }}
  renewBefore: {{ .Values.cert.renewBefore }}
  privateKey:
# It seems OSX has problems validating ECDSA tokens.. :-/
#    algorithm: ECDSA
#    size: 256
    algorithm: RSA
    size: 4096
  usages:
    - server auth
    - digital signature
    - content commitment
    - key encipherment
  # At least one of a DNS Name, URI, or IP address is required.
  dnsNames:
    - localhost
    - ziti-controller
    {{- if .Values.clientApi.service.enabled }}
    - {{ include "ziti-controller.fullname" . }}-client
    - {{ include "ziti-controller.fullname" . }}-client.{{ .Release.Namespace }}
    - {{ include "ziti-controller.fullname" . }}-client.{{ .Release.Namespace }}.svc
    - {{ include "ziti-controller.fullname" . }}-client.{{ .Release.Namespace }}.svc.{{ .Values.ca.clusterDomain }}
      {{- if .Values.clientApi.advertisedHost }}
    - {{ .Values.clientApi.advertisedHost }}
      {{- end }}
      {{- if .Values.clientApi.dnsNames }}
        {{- range .Values.clientApi.dnsNames }}
    - {{ . | quote }}
        {{- end }}
      {{- end }}
    {{- end }}
  # uris:
  #   - spiffe://{{ .Values.ca.clusterDomain }}/ns/sandbox/sa/example
  ipAddresses:
    - 127.0.0.1
    - "::1"
  issuerRef:
    kind: Issuer
    name: {{ include "ziti-controller.fullname" . }}-web-intermediate-issuer

  {{- if .Values.managementApi.service.enabled }}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ include "ziti-controller.fullname" . }}-web-mgmt-api-cert
  labels:
    {{- include "ziti-controller.labels" . | nindent 4 }}
spec:
  commonName: {{ include "ziti-controller.fullname" . }}-mgmt
  secretName: {{ include "ziti-controller.fullname" . }}-web-mgmt-api-secret
  isCA: false
  duration: {{ .Values.cert.duration }}
  renewBefore: {{ .Values.cert.renewBefore }}
  privateKey:
# It seems OSX has problems validating ECDSA tokens.. :-/
#    algorithm: ECDSA
#    size: 256
    algorithm: RSA
    size: 4096
  usages:
    - server auth
    - digital signature
    - content commitment
    - key encipherment
  # At least one of a DNS Name, URI, or IP address is required.
  dnsNames:
    - localhost
    - {{ include "ziti-controller.fullname" . }}-mgmt
    - {{ include "ziti-controller.fullname" . }}-mgmt.{{ .Release.Namespace }}
    - {{ include "ziti-controller.fullname" . }}-mgmt.{{ .Release.Namespace }}.svc
    - {{ include "ziti-controller.fullname" . }}-mgmt.{{ .Release.Namespace }}.svc.{{ .Values.ca.clusterDomain }}
    - {{ include "ziti-controller.tplOrLiteral" (dict "value" .Values.managementApi.advertisedHost "context" .) }}
      {{- if gt (len .Values.managementApi.dnsNames) 0 }}
        {{- range .Values.managementApi.dnsNames }}
    - {{ . | quote }}
        {{- end }}
      {{- end }}
  ipAddresses:
    - 127.0.0.1
    - "::1"
  issuerRef:
    kind: Issuer
    name: {{ include "ziti-controller.fullname" . }}-web-intermediate-issuer
  {{- end }}

  {{- if .Values.prometheus.service.enabled }}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ include "ziti-controller.fullname" . }}-web-prometheus-metrics-cert
  labels:
    {{- include "ziti-controller.labels" . | nindent 4 }}
spec:
  commonName: {{ include "ziti-controller.fullname" . }}-prometheus
  secretName: {{ include "ziti-controller.fullname" . }}-web-prometheus-metrics-secret
  isCA: false
  duration: {{ .Values.cert.duration }}
  renewBefore: {{ .Values.cert.renewBefore }}
  privateKey:
# It seems OSX has problems validating ECDSA tokens.. :-/
#    algorithm: ECDSA
#    size: 256
    algorithm: RSA
    size: 4096
  usages:
    - server auth
    - digital signature
    - content commitment
    - key encipherment
  # At least one of a DNS Name, URI, or IP address is required.
  dnsNames:
    - localhost
    - {{ .Values.prometheus.advertisedHost | default (printf "%s-prometheus.%s.svc.%s" .Release.Name .Release.Namespace .Values.ca.clusterDomain) }}
  ipAddresses:
    - 127.0.0.1
    - "::1"
  issuerRef:
    kind: Issuer
    name: {{ include "ziti-controller.fullname" . }}-web-intermediate-issuer
  {{- end }}

---
# the controller's web client identity
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ include "ziti-controller.fullname" . }}-web-client-identity
  labels:
    {{- include "ziti-controller.labels" . | nindent 4 }}
spec:
  isCA: false
  commonName: {{ include "ziti-controller.fullname" . }}-web-client-identity
  secretName: {{ include "ziti-controller.fullname" . }}-web-client-identity-secret
  privateKey:
    algorithm: ECDSA
    size: 256
  usages:
    - client auth
    - digital signature
    - content commitment
    - key encipherment
  issuerRef:
    kind: Issuer
    name: {{ include "ziti-controller.fullname" . }}-web-intermediate-issuer

{{- end }}
