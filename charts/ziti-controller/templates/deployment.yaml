---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ziti-controller.fullname" . }}
  labels:
    {{- include "ziti-controller.labels" . | nindent 4 }}
    app.kubernetes.io/component: "ziti-controller"
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "ziti-controller.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: "ziti-controller"
  template:
    metadata:
      annotations:
        configmap-checksum: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "ziti-controller.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: "ziti-controller"
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      dnsPolicy: {{ .Values.dnsPolicy }}
      initContainers:
        - name: {{ .Chart.Name }}-init
          image: {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
          command: ["ziti-controller-init.bash"]
          env:
            - name: ZITI_ADMIN_USER
              valueFrom:
                secretKeyRef:
                {{- if .Values.useCustomAdminSecret }}
                  name:  {{ .Values.customAdminSecretName }}
                {{- else }}
                  name: {{ include "ziti-controller.fullname" . }}-admin-secret
                {{- end }}
                  key: admin-user
            - name: ZITI_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                {{- if .Values.useCustomAdminSecret }}
                  name:  {{ .Values.customAdminSecretName }}
                {{- else }}
                  name: {{ include "ziti-controller.fullname" . }}-admin-secret
                {{- end }}
                  key: admin-password
            - name: ZITI_TRUST_DOMAIN
              valueFrom:
                secretKeyRef:
                  name:  {{ include "ziti-controller.fullname" . }}-trust-domain
                  key: trustDomain
            - name: ZITI_CTRL_PLANE_CA
              value: {{ include "configMountDir" . }}/{{ include  "ziti-controller.ctrlPlaneCaDir" . }}
            - name: HOME
              value: {{ .Values.image.homeDir }}
            # must be false or container image will run bootstrap(), which is not currently used in this chart, only by
            # Linux and Docker deployments
            - name: ZITI_BOOTSTRAP
              value: "false"
          volumeMounts:
            - mountPath: {{ include "execMountDir" . }}/ziti-controller-init.bash
              name: ziti-controller-configmap
              subPath: ziti-controller-init.bash
            - mountPath: {{ include "dataMountDir" . }}
              name: data
            - mountPath: {{ include "configMountDir" . }}/ziti-controller.yaml
              name: ziti-controller-configmap
              subPath: ziti-controller.yaml
            - mountPath: {{ include "configMountDir" . }}/{{ include  "ziti-controller.ctrlPlaneCaDir" . }}
              name: ziti-controller-ctrl-plane-cas
              readOnly: true
            - mountPath: {{ include "configMountDir" . }}/ctrl-plane-identity/
              name: cert-ctrl-plane-identity
              readOnly: true
            - mountPath: {{ include "configMountDir" . }}/ctrl-plane-client-identity/
              name: cert-ctrl-plane-client-identity
              readOnly: true
            {{- if (eq .Values.edgeSignerPki.enabled true) }}
            - mountPath: {{ include "configMountDir" . }}/edge-signer/
              name: cert-edge-signer
              readOnly: true
            {{- else }}
            - mountPath: {{ include "configMountDir" . }}/ctrl-plane-intermediate/
              name: cert-ctrl-plane-intermediate
              readOnly: true
            {{- end }}
            {{- if (eq .Values.webBindingPki.enabled true) }}
            - mountPath: {{ include "configMountDir" . }}/web-identity/
              name: cert-web-identity
              readOnly: true
            - mountPath: {{ include "configMountDir" . }}/web-client-identity/
              name: cert-web-client-identity
              readOnly: true
              {{- if .Values.managementApi.service.enabled }}
            - mountPath: {{ include "configMountDir" . }}/web-mgmt-api/
              name: cert-mgmt-api
              readOnly: true
              {{- end }}
              {{- if .Values.prometheus.service.enabled }}
            - mountPath: {{ include "configMountDir" . }}/web-prometheus-metrics/
              name: cert-prometheus-metrics
              readOnly: true
              {{- end }}
            {{- end }}
      shareProcessNamespace: true  # this allows the admin container to observe the controller process namespace
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
          - name: client-api
            containerPort: {{ .Values.clientApi.containerPort }}
          {{- if .Values.ctrlPlane.service.enabled }}
          - name: ctrl-plane
            containerPort: {{ include "ziti-controller.tplOrLiteral" (dict "value" .Values.ctrlPlane.containerPort "context" .) }}
          {{- end }}
          {{- if .Values.managementApi.service.enabled }}
          - name: mgmt-api
            containerPort: {{ include "ziti-controller.tplOrLiteral" (dict "value" .Values.managementApi.containerPort "context" .) }}
          {{- end }}
          {{- if .Values.prometheus.enabled }}
          - name: prometheus
            containerPort: {{ .Values.prometheus.containerPort }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{ if .Values.image.command }}
          command:
          {{- range .Values.image.command }}
            - {{ . | quote }}
          {{- end }}
          {{ end }}
          args:
            {{- tpl (toYaml .Values.image.args) . | nindent 12 }}
            {{- range .Values.image.additionalArgs }}
            - {{ . | quote }}
            {{- end }}

          env:
            - name: ZITI_CTRL_PLANE_CA
              value: {{ include "configMountDir" . }}/{{ include  "ziti-controller.ctrlPlaneCaDir" . }}
            - name: HOME
              value: {{ .Values.image.homeDir }}
            - name: ZITI_MGMT_API
              {{- if .Values.managementApi.service.enabled }}
              value: {{ include "ziti-controller.fullname" . }}-mgmt.{{ .Release.Namespace }}.svc.{{ .Values.ca.clusterDomain }}:{{ include "ziti-controller.tplOrLiteral" (dict "value" .Values.managementApi.advertisedPort "context" .) }}
              {{- else }}
              value: {{ include "ziti-controller.fullname" . }}-client.{{ .Release.Namespace }}.svc.{{ .Values.ca.clusterDomain }}:{{ .Values.clientApi.advertisedPort }}
              {{- end }}
            - name: ZITI_ADMIN_USER
              valueFrom:
                secretKeyRef:
                {{- if .Values.useCustomAdminSecret }}
                  name:  {{ .Values.customAdminSecretName }}
                {{- else }}
                  name: {{ include "ziti-controller.fullname" . }}-admin-secret
                {{- end }}
                  key: admin-user
            - name: ZITI_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                {{- if .Values.useCustomAdminSecret }}
                  name:  {{ .Values.customAdminSecretName }}
                {{- else }}
                  name: {{ include "ziti-controller.fullname" . }}-admin-secret
                {{- end }}
                  key: admin-password
            - name: ZITI_TRUST_DOMAIN
              valueFrom:
                secretKeyRef:
                  name:  {{ include "ziti-controller.fullname" . }}-trust-domain
                  key: trustDomain
            # Add additional environment variables
            {{- range $key, $val := .Values.env }}
            - name: {{ $key | quote }}
              value: {{ $val | quote }}
            {{- end }}
            # Add additional secrets as environment variables
            {{- range .Values.envSecrets }}
            - name: {{ .name | quote }}
              valueFrom:
                secretKeyRef:
                  name: {{ .valueFrom.secretKeyRef.name | quote }}
                  key: {{ .valueFrom.secretKeyRef.key | quote }}
            {{- end }}
          volumeMounts:
            - mountPath: {{ include "dataMountDir" . }}
              name: data
            - mountPath: {{ include "execMountDir" . }}/zitiLogin
              name: ziti-controller-configmap
              subPath: zitiLogin
            - mountPath: {{ include "configMountDir" . }}/ziti-controller.yaml
              name: ziti-controller-configmap
              subPath: ziti-controller.yaml
            - mountPath: {{ .Values.image.homeDir }}/.bash_profile
              name: ziti-controller-configmap
              subPath: .bash_profile
            - mountPath: {{ include "configMountDir" . }}/{{ include  "ziti-controller.ctrlPlaneCaDir" . }}
              name: ziti-controller-ctrl-plane-cas
              readOnly: true
            - mountPath: {{ include "configMountDir" . }}/ctrl-plane-identity/
              name: cert-ctrl-plane-identity
              readOnly: true
            - mountPath: {{ include "configMountDir" . }}/ctrl-plane-client-identity/
              name: cert-ctrl-plane-client-identity
              readOnly: true
            {{- if (eq .Values.edgeSignerPki.enabled true) }}
            - mountPath: {{ include "configMountDir" . }}/edge-signer/
              name: cert-edge-signer
              readOnly: true
            {{- else }}
            - mountPath: {{ include "configMountDir" . }}/ctrl-plane-intermediate/
              name: cert-ctrl-plane-intermediate
              readOnly: true
            {{- end }}
            {{- if (eq .Values.webBindingPki.enabled true) }}
            - mountPath: {{ include "configMountDir" . }}/web-identity/
              name: cert-web-identity
              readOnly: true
            - mountPath: {{ include "configMountDir" . }}/web-client-identity/
              name: cert-web-client-identity
              readOnly: true
              {{- if .Values.managementApi.service.enabled }}
            - mountPath: {{ include "configMountDir" . }}/web-mgmt-api/
              name: cert-mgmt-api
              readOnly: true
              {{- end }}
              {{- if .Values.prometheus.service.enabled }}
            - mountPath: {{ include "configMountDir" . }}/web-prometheus-metrics/
              name: cert-prometheus-metrics
              readOnly: true
              {{- end }}
            {{- end }}
            {{- if .Values.fabric.events.enabled }}
            - mountPath: {{ .Values.fabric.events.mountDir }}
              name: fabric-events
            {{- end }}
            {{- if .Values.spireAgent.enabled }}
            - mountPath: {{ .Values.spireAgent.spireSocketMnt }}
              name: spire-agent-socket
              readOnly: true
            {{- end }}
            {{- range .Values.additionalVolumes }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
            {{- end }}
            {{- if gt (len .Values.webBindingPki.altServerCerts) 0 }}
              {{- range .Values.webBindingPki.altServerCerts }}
                {{- if eq .mode "certManager" }}
            - mountPath: {{ .mountPath }}
              name: {{ printf "%v-%v" (include "ziti-controller.fullname" $) .secretName }}
              readOnly: true
                {{- end }}
              {{- end }}
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: ziti-controller-configmap
          configMap:
            name: {{ include "ziti-controller.fullname" . }}-config
            items:
              - key: ziti-controller-init.bash
                path: ziti-controller-init.bash
                mode: 0555
              - key: ziti-controller.yaml
                path: ziti-controller.yaml
                mode: 0444
              - key: .bash_profile
                path: .bash_profile
                mode: 0444
              - key: zitiLogin
                path: zitiLogin
                mode: 0555
        - name: ziti-controller-ctrl-plane-cas
          configMap:
            name: {{ include "ziti-controller.fullname" . }}-ctrl-plane-cas
            defaultMode: 0444
        - name: cert-ctrl-plane-identity
          secret:
            secretName: {{ include "ziti-controller.fullname" . }}-ctrl-plane-identity-secret
        - name: cert-ctrl-plane-client-identity
          secret:
            secretName: {{ include "ziti-controller.fullname" . }}-ctrl-plane-client-identity-secret
        {{- if (eq .Values.edgeSignerPki.enabled true) }}
        - name: cert-edge-signer
          secret:
            secretName: {{ include "ziti-controller.fullname" . }}-edge-signer-secret
        {{- else }}
        - name: cert-ctrl-plane-intermediate
          secret:
            secretName: {{ include "ziti-controller.fullname" . }}-ctrl-plane-intermediate-secret
        {{- end }}
        {{- if (eq .Values.webBindingPki.enabled true) }}
        - name: cert-web-identity
          secret:
            secretName: {{ include "ziti-controller.fullname" . }}-web-identity-secret
        - name: cert-web-client-identity
          secret:
            secretName: {{ include "ziti-controller.fullname" . }}-web-client-identity-secret
          {{- if .Values.managementApi.service.enabled }}
        - name: cert-mgmt-api
          secret:
            secretName: {{ include "ziti-controller.fullname" . }}-web-mgmt-api-secret
          {{- end }}
          {{- if .Values.prometheus.service.enabled }}
        - name: cert-prometheus-metrics
          secret:
            secretName: {{ include "ziti-controller.fullname" . }}-web-prometheus-metrics-secret
          {{- end }}
        {{- end }}
        - name: data
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "ziti-controller.fullname" .) }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        {{- if .Values.fabric.events.enabled }}
        - name: fabric-events
          emptyDir: {}
        {{- end }}
        {{- if .Values.spireAgent.enabled }}
        - name: spire-agent-socket
          hostPath:
            path: {{ .Values.spireAgent.spireSocketMnt }}
            type: Directory
        {{- end }}
        {{- range .Values.additionalVolumes }}
        - name: {{ .name }}
          {{- if eq .volumeType "secret" }}
          secret:
            secretName: {{ .secretName }}
          {{- else if eq .volumeType "configMap" }}
          configMap:
            name: {{ .configMapName }}
          {{- else if eq .volumeType "emptyDir" }}
          emptyDir: {}
          {{- end }}
        {{- end }}
        {{- if gt (len .Values.webBindingPki.altServerCerts) 0 }}
          {{- range .Values.webBindingPki.altServerCerts }}
            {{- if eq .mode "certManager" }}
        - name: {{ printf "%v-%v" (include "ziti-controller.fullname" $) .secretName }}
          secret:
            secretName: {{ .secretName }}
            {{- end }}
          {{- end }}
        {{- end }}
