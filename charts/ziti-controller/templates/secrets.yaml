{{- if not .Values.useCustomAdminSecret }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "ziti-controller.fullname" . }}-admin-secret
  labels:
    {{- include "ziti-controller.labels" . | nindent 4 }}
  annotations:
    # "helm.sh/resource-policy": "keep"
type: Opaque
data:
  # retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace (print (include "ziti-controller.fullname" . ) "-admin-secret")) | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  # set $adminPassword / adminuser to existing secret data or generate a random one when not exists
  {{- $adminPassword := (get $secretData "admin-password") | default (randAlphaNum 32 | b64enc) }}
  {{- $adminUser := (get $secretData "admin-user") | default ("admin" | b64enc) }}
  # set the secret values..
  admin-password: {{ $adminPassword | quote }}
  admin-user: {{ $adminUser | quote }}
{{- end }}
